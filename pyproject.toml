[build-system]
requires = ["hatchling >= 1.13.0"]
build-backend = "hatchling.build"

# https://hatch.pypa.io/latest/config/metadata/
[project]
name = "fastapi-proxy"
# the lowest required python version should be added to `.pre-commit-pyrightconfig.json`
requires-python = ">=3.8"
readme = "README.md"
license = { file = "LICENSE" }
authors = [
    { name = "Sean Wang", email = "126865849+WSH032@users.noreply.github.com" },
]
description = "HTTP/WebSocket asgi proxy."
keywords = [
    "proxy",
    "http",
    "websocket",
    "asgi",
    "starlette",
    "fastapi",
    "httpx",
    "httpx-ws",
]
# https://pypi.org/classifiers/
classifiers = [
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3 :: Only",
    "Topic :: Internet :: WWW/HTTP :: Session",
    "Framework :: AsyncIO",
]

dynamic = ["version"]

dependencies = ["httpx", "httpx-ws", "starlette", "typing_extensions>=4.5.0"]

[project.urls]
# Documentation = "..."
"Source code" = "https://github.com/WSH032/fastapi-proxy"

[project.optional-dependencies]
standard = ["fastapi"]
all = ["fastapi-proxy[standard]"]


[tool.hatch.version]
path = "src/fastapi_proxy/__init__.py"

[tool.hatch.envs.default]
path = ".venv" # for vscode auto selecting python interpreter
features = ["all"]
dependencies = [
    # lint
    # The dependencies version must be consistent with the `.pre-commit-config.yaml`.
    # # "pre-commit == 3.5.0",
    "black == 23.10.0",
    "pyright == 1.1.332", # pyright must be installed in the runtime environment
    "ruff == 0.1.1",
    "codespell == 2.2.6",
    # test
    "pytest == 7.4.2",
    "pytest-cov ==  4.1.0",
    "uvicorn[standard] == 0.23.2",
]

[tool.hatch.envs.default.scripts]
test = "pytest --cov-report=html"
# ruff must before black
lint = ["ruff --fix .", "black .", "pyright .", "codespell ."]

# https://hatch.pypa.io/latest/config/environment/overview/#detached-environments
[tool.hatch.envs.docs]
detached = true
dependencies = ["mkdocs-material == 9.4.6", "mkdocstrings[python] == 0.23.0"]

[tool.hatch.envs.docs.scripts]
docs-serve = "mkdocs serve"
docs-build = "mkdocs build"


# https://docs.astral.sh/ruff/rules/
[tool.ruff]
select = [
    "E",      # pycodestyle errors
    "W",      # pycodestyle warnings
    "F",      # pyflakes
    "I",      # isort
    "C4",     # flake8-comprehensions
    "B",      # flake8-bugbear
    "N",      # pep8-naming
    "UP",     # pyupgrade
    "D",      # pydocstyle
    "SIM",    # flake8-simplify
    "RUF",    # unused-noqa
    "Q",      # flake8-quotes
    "C90",    # McCabe complexity
    "ANN001", # missing-type-function-argument
    "ANN201", # missing-return-type-undocumented-public-function
    "ASYNC",  # flake8-async
    "A",      # flake8-builtins
    "COM",    # flake8-commas
    "ISC",    # flake8-implicit-str-concat
    "ICN001", # unconventional-import-alias
    "PIE",    # flake8-pie
    "PT",     # flake8-pytest-style
    "INT",    # flake8-gettext
    "ARG",    # flake8-unused-arguments
    "PGH004", # blanket-noqa
    "TRY201", # Use raise without specifying exception name
    "NPY",    # NumPy-specific rules
    "PD",     # pandas-vet
    "PERF",   # Perflint
    "PL",     # Pylint
    "TID252", # Relative imports from parent modules are banned
]
ignore = [
    "E501",    # line too long, handled by black
    "COM812",  # missing-trailing-comma
    "PERF203", # try-except within a loop incurs performance overhead
    "PLR2004", # magic-value-comparison
    "PLR5501", # collapsible-else-if
    "PLW0120", # useless-else-on-loop
    "PLR0911", # too-many-return-statements
    "PLR0913", # too-many-arguments
    "PLC0205", # single-string-slots
    "PLW0603", # global-statement
    "PLC1901", # compare-to-empty-string
    "PLR0904", # too-many-public-methods
    "RUF002",  # ambiguous-unicode-character-docstring
    "RUF003",  # ambiguous-unicode-character-comment
    "SIM105",  # suppressible-exception # slower
    "D418",    # Function decorated with `@overload` shouldn't contain a docstring
    # "SIM108",  # if-else-block-instead-of-if-exp
]

# https://docs.astral.sh/ruff/settings/#pydocstyle
[tool.ruff.pydocstyle]
convention = "google"


# https://microsoft.github.io/pyright/#/configuration
[tool.pyright]
typeCheckingMode = "strict"
pythonVersion = "3.8"
reportUnusedImport = "warning"
reportUnusedFunction = "warning"
reportUnusedExpression = "warning"
reportUnusedVariable = "warning"
reportUnnecessaryTypeIgnoreComment = true
reportPrivateUsage = "warning"
reportUnnecessaryIsInstance = "warning"
reportIncompatibleMethodOverride = "warning"
reportMissingTypeArgument = true
reportMissingParameterType = true
